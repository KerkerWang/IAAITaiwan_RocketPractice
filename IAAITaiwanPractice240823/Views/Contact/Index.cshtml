@model IAAITaiwanPractice240823.Models.Contact
@using BotDetect.Web.Mvc;
@using IAAITaiwanPractice240823.Models;

@{
    //using IAAITaiwanPractice240823.Models.Contact;
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styles{
    <link href="@BotDetect.Web.CaptchaUrls.Absolute.LayoutStyleSheetUrl"
          rel="stylesheet" type="text/css" />
}

@using (Html.BeginForm("Index", "Contact", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @*<form class="form-horizontal" role="form">*@

    <div class="form-group">
        @*@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })*@
        @Html.Label("姓　名：", new { @class = "col-sm-2 control-label" })
        @*<label class="col-sm-2 control-label">姓　名：</label>*@
        <div class="col-sm-7">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "請輸入姓名" } })
            @*@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" }, "<i class=\"fa fa-exclamation-circle\"></i> 姓名必填")*@
            @*<input class="form-control" placeholder="請輸入姓名">*@
        </div>
        <div class="col-sm-3">
            @if (!string.IsNullOrEmpty(ViewData.ModelState["Name"]?.Errors.FirstOrDefault()?.ErrorMessage))
            {
                <span class="alertred"><i class="fa fa-exclamation-circle"></i> 姓名必填</span>
            }
            @*<span class="alertred"><i class="fa fa-exclamation-circle"></i> 姓名必填</span>*@
        </div>
    </div>

    <div class="form-group">
        <label class="col-sm-2 control-label">性　別：</label>
        <div class="col-sm-7">
            @foreach (GenderType gender in Enum.GetValues(typeof(GenderType)))
            {
                <label class="radio-inline">
                    @Html.RadioButtonFor(model => model.Gender, gender) @gender.ToString()
                </label>
            }
            @*@Html.RadioButtonFor(model => model.Gender, "男", new { @class = "radiostyle01" })
                <label class="checkbox-inline checkbox01">
                    <input class=" radiostyle01" type="radio" name="radio" id="radio" value="radio" /> 男
                </label>
                <label class="checkbox-inline checkbox01">
                    <input class="radiostyle01" type="radio" name="radio" id="radio" value="radio" /> 女
                </label>*@
        </div>
        @*<div class="col-sm-3">
                <span class="alertred"><i class="fa fa-exclamation-circle"></i> 性別必填</span>
            </div>*@
    </div>

    <div class="form-group">
        @Html.Label("聯絡電話：", new { @class = "col-sm-2 control-label" })
        @*<label class="col-sm-2 control-label">聯絡電話：</label>*@
        <div class="col-sm-7">
            @Html.EditorFor(model => model.Tel, new { htmlAttributes = new { @class = "form-control", placeholder = "請輸入聯絡電話" } })
            @*@Html.ValidationMessageFor(model => model.Tel, "", new { @class = "text-danger" })*@
            @*<input class="form-control" placeholder="請輸入聯絡電話">*@
        </div>
        <div class="col-sm-3">
            @if (!string.IsNullOrEmpty(ViewData.ModelState["Tel"]?.Errors.FirstOrDefault()?.ErrorMessage))
            {
                <span class="alertred"><i class="fa fa-exclamation-circle"></i> 聯絡電話必填</span>
            }
            @*<span class="alertred"><i class="fa fa-exclamation-circle"></i> 聯絡電話必填</span>*@
        </div>
    </div>

    <div class="form-group">
        @Html.Label("E-mail：", new { @class = "col-sm-2 control-label" })
        @*<label class="col-sm-2 control-label">E-mail：</label>*@
        <div class="col-sm-7">
            @Html.EditorFor(model => model.Email, new
            {
                htmlAttributes = new
                {
                    @class = "form-control",
           placeholder = "請輸入E-mail"
                }
            })
            @*@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })*@
            @*<input class="form-control" placeholder="請輸入E-mail">*@
        </div>
        <div class="col-sm-3">
            @if (!string.IsNullOrEmpty(ViewData.ModelState["Email"]?.Errors.FirstOrDefault()?.ErrorMessage))
            {
                <span class="alertred"><i class="fa fa-exclamation-circle"></i> E-mail必填</span>
            }
            @*<span class="alertred"><i class="fa fa-exclamation-circle"></i> E-mail必填</span>*@
        </div>
    </div>

    <div class="form-group">
        @Html.Label("詢問標題：", new { @class = "col-sm-2 control-label" })
        @*<label class="col-sm-2 control-label">E-mail：</label>*@
        <div class="col-sm-7">
            @Html.EditorFor(model => model.Title, new
            {
                htmlAttributes = new
                {
                    @class = "form-control",
           placeholder = "請輸入名稱"
                }
            })
            @*@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })*@
            @*<input class="form-control" placeholder="請輸入E-mail">*@
        </div>
        <div class="col-sm-3">
            @if (!string.IsNullOrEmpty(ViewData.ModelState["Title"]?.Errors.FirstOrDefault()?.ErrorMessage))
            {
                <span class="alertred"><i class="fa fa-exclamation-circle"></i> 名稱必填</span>
            }
            @*<span class="alertred"><i class="fa fa-exclamation-circle"></i> E-mail必填</span>*@
        </div>
    </div>

    <div class="form-group">
        @Html.Label("詢問內容：", new { @class = "col-sm-2 control-label" })
        @*<label class="col-sm-2 control-label">詢問內容：</label>*@
        <div class="col-sm-10">
            @Html.TextAreaFor(model => model.Content, 10, 0, new { @class = "form-control form-control-message", placeholder = "請輸入詢問內容" })
            @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            @*<textarea class="form-control form-control-message" placeholder="請輸入詢問內容" rows="10" required></textarea>*@
        </div>
    </div>

    <div class="form-group">
        <label class="col-sm-2 control-label">驗證碼：</label>
        <div class="col-sm-3">
            @Html.TextBox("CaptchaCode", "", new { @class = "form-control", placeholder = "請輸入驗證碼" })
            @Html.ValidationMessage("CaptchaCode")
            @*@if ((Request.HttpMethod == "POST")
                && ViewData.ModelState.IsValid)
                {
                    <span class="correct">Correct!</span>
                }*@
            @*<input class="form-control" placeholder="請輸入驗證碼">*@
        </div>
        <div class="col-sm-4">
            @{ MvcCaptcha exampleCaptcha = new MvcCaptcha("ExampleCaptcha");
                exampleCaptcha.UserInputID = "CaptchaCode";}
            @Html.Captcha(exampleCaptcha)
            @*<img src="images/test.jpg" alt="">*@
        </div>

        <div class="col-sm-3">
            @if (!string.IsNullOrEmpty(ViewData.ModelState["CaptchaCode"]?.Errors.FirstOrDefault()?.ErrorMessage))
            {
                <span class="alertred"><i class="fa fa-exclamation-circle"></i> 驗證碼必填</span>
            }
            @*<span class="alertred"><i class="fa fa-exclamation-circle"></i> 驗證碼必填</span>*@
        </div>
    </div>

    <hr>

    <div class="form-group">
        <div class="col-sm-offset-2 col-sm-10">
            <button class="btn btn-primary solid blank" type="submit">送 出</button>
        </div>
    </div>
    @*</form>*@
    @*<fieldset>
            <legend>ASP.NET MVC CAPTCHA Validation</legend>
            <div>
                @Html.Label("CaptchaCode", "Retype the code from the picture: ")
                @{ MvcCaptcha exampleCaptcha = new MvcCaptcha("ExampleCaptcha");
                    exampleCaptcha.UserInputID = "CaptchaCode";}
                @Html.Captcha(exampleCaptcha)
            </div>
            <div class="actions">
                @Html.TextBox("CaptchaCode")
                <input type="submit" value="Validate" />
                @Html.ValidationMessage("CaptchaCode")
                @if ((Request.HttpMethod == "POST")
                && ViewData.ModelState.IsValid)
                {
                    <span class="correct">Correct!</span>
                }
            </div>
        </fieldset>*@

    @*<div class="form-horizontal">
            <h4>Contact</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Tel, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Tel, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Tel, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>*@
}

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@